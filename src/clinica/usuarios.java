/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinica;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author crist
 */
public class usuarios extends javax.swing.JFrame {
    mantenimiento man = new mantenimiento();

    /**
     * Creates new form usuarios
     */
    public usuarios() {
        initComponents();
        mostrarDatosEnTabla();
        cargarTabla();
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnmenu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtapellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtcorreo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cfecha = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtidentidad = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtusuario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtclave = new javax.swing.JTextField();
        cbroles = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladetalles = new javax.swing.JTable();
        btnagregar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnaliminar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnmenu.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        btnmenu.setText("menu");
        btnmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmenuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel2.setText("Adminstracion de Usuarios");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Nombre");

        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombreKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Apellido");

        txtapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidoActionPerformed(evt);
            }
        });
        txtapellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtapellidoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Correo");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Fecha de Nacimiento");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Numero de Identidad");

        txtidentidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtidentidadKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Nombre de Usuarios");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Contrase√±a");

        cbroles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "usuario", "administrador" }));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Roles");

        tabladetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "nombre", "apellido", "correo", "fecha nacimiento", "numero identidad", "usuario", "clave", "rol"
            }
        ));
        tabladetalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabladetallesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabladetalles);

        btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-agregar.png"))); // NOI18N
        btnagregar.setText("Agregar");
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });

        btnmodificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-editar.png"))); // NOI18N
        btnmodificar.setText("Modificar");
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });

        btnaliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnaliminar.setText("Eliminar");
        btnaliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaliminarActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/adminuser.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cfecha, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(txtnombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtclave, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtidentidad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addComponent(cbroles, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel6))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtusuario)
                                .addGap(9, 9, 9))
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jLabel9)
                        .addGap(147, 147, 147)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnagregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnaliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(158, 158, 158)
                                .addComponent(jLabel4)
                                .addGap(176, 176, 176)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnmenu)
                                .addGap(60, 60, 60)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(84, 84, 84)
                            .addComponent(jLabel2)
                            .addGap(107, 107, 107))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnmenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtusuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtidentidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtclave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbroles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnagregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnmodificar)
                        .addGap(7, 7, 7)
                        .addComponent(btnaliminar)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmenuActionPerformed
   
            menu nuevoFormulario = new menu();
        nuevoFormulario.setVisible(true);
        
        this.dispose();   
    }//GEN-LAST:event_btnmenuActionPerformed

    private void txtapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtapellidoActionPerformed

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed

        String nombre = txtnombre.getText();
String apellido = txtapellido.getText();
String correo = txtcorreo.getText();
Date fecha = cfecha.getDate();
String identidad = txtidentidad.getText();
String usuario = txtusuario.getText();
String clave = txtclave.getText();
String rol = cbroles.getSelectedItem().toString();

DefaultTableModel model = (DefaultTableModel) tabladetalles.getModel();

// Convertir la fecha a un formato compatible con la base de datos
DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
String fechaStr = dateFormat.format(fecha);

// Agregar los datos a la tabla
model.addRow(new Object[]{nombre, apellido, correo, fechaStr, identidad, usuario, clave, rol});

// Insertar los datos del usuario en la base de datos
classusuario.insertarDatosEnBD(nombre, apellido, correo, fechaStr, identidad, usuario, clave, rol);

// Mostrar un mensaje de √©xito
JOptionPane.showMessageDialog(null, "Usuario Agregado correctamente.");

// Actualizar la tabla
cargarTabla();

// Limpiar los campos de entrada
limpiarCampos();

    }//GEN-LAST:event_btnagregarActionPerformed

    private void tabladetallesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabladetallesMouseClicked
        // Obtenemos el modelo de la tabla
    DefaultTableModel model = (DefaultTableModel) tabladetalles.getModel();

    // Obtenemos el √≠ndice de la fila seleccionada
    int selectedRowIndex = tabladetalles.getSelectedRow();

    // Verificamos si se ha seleccionado una fila v√°lida
    if (selectedRowIndex >= 0) {
        // Obtenemos los datos de la fila seleccionada
        String nombre = model.getValueAt(selectedRowIndex, 0).toString();
        String apellido = model.getValueAt(selectedRowIndex, 1).toString();
        String correo = model.getValueAt(selectedRowIndex, 2).toString();
        String fecha = model.getValueAt(selectedRowIndex, 3).toString();

        String identidad = model.getValueAt(selectedRowIndex, 4).toString();
        String nombreusuario = model.getValueAt(selectedRowIndex, 5).toString();
        String contrase√±a = model.getValueAt(selectedRowIndex, 6).toString();
        String rolSeleccionado = model.getValueAt(selectedRowIndex, 7).toString();

        txtnombre.setText(nombre);
        txtapellido.setText(apellido);
        txtcorreo.setText(correo);
        // Convert the date string to a Date object before setting it to the JDateChooser
   try {
    SimpleDateFormat inputDateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date fechaDate = inputDateFormat.parse(fecha);

    SimpleDateFormat outputDateFormat = new SimpleDateFormat("dd/MM/yyyy");
    String fechaFormateada = outputDateFormat.format(fechaDate);

    // Ahora puedes asignar "fechaFormateada" al JDateChooser o a otro componente.
    cfecha.setDate(fechaDate);
} catch (ParseException ex) {
    // Handle parsing error if the date is invalid
    ex.printStackTrace();
}

    // Handle parsing error if the date is invalid
 
        txtidentidad.setText(identidad);
        txtusuario.setText(nombreusuario);
        txtclave.setText(contrase√±a);
        cbroles.setSelectedItem(rolSeleccionado);
        cargarTabla();
        
    }
    

        
    }//GEN-LAST:event_tabladetallesMouseClicked

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed

        String nombre = txtnombre.getText();
        String apellido = txtapellido.getText();
        String correo = txtcorreo.getText();
        Date fecha = cfecha.getDate();
        String identidad = txtidentidad.getText();
        String usuario = txtusuario.getText();
        String clave = txtclave.getText();
        String rol =(String) cbroles.getSelectedItem();

  
// Llama al m√©todo modificarUsuario para actualizar el usuario en la base de datos
classusuario.modificarUsuario(nombre, apellido, correo, fecha, identidad, usuario, clave, rol);
JOptionPane.showMessageDialog(null, "Usuario Modifico correctamente.");
   limpiarCampos();
     cargarTabla(); 
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btnaliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaliminarActionPerformed
        // TODO add your handling code here:
        String usuarioAEliminar = txtnombre.getText(); // Obtiene el nombre de usuario a eliminar desde el campo de texto (u otra fuente de datos)

    // Llama al m√©todo eliminarUsuario de la clase classusuario
    classusuario.eliminarUsuario(usuarioAEliminar);

    // Opcionalmente, muestra un mensaje para indicar que el usuario fue eliminado correctamente.
    JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente.");

   
        cargarTabla();
        limpiarCampos();
    }//GEN-LAST:event_btnaliminarActionPerformed

    private void txtnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyTyped
        // TODO add your handling code here:
        man.sololetras(txtnombre, evt);
    }//GEN-LAST:event_txtnombreKeyTyped

    private void txtapellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtapellidoKeyTyped
        // TODO add your handling code here:
        man.sololetras(txtapellido, evt);
    }//GEN-LAST:event_txtapellidoKeyTyped

    private void txtidentidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidentidadKeyTyped
        // TODO add your handling code here:
        man.solonumeros(txtidentidad, evt);
    }//GEN-LAST:event_txtidentidadKeyTyped

    private void mostrarDatosEnTabla() {
    DefaultTableModel model = (DefaultTableModel) tabladetalles.getModel();
    model.setRowCount(0); // Limpiamos la tabla antes de cargar los datos

    conexionsql conexionBD = new conexionsql();
    Connection conexion = conexionBD.obtenerconexion();
    if (conexion != null) {
        try {
            String sql = "SELECT nombre, apellido, correo, fecha_nacimiento, numero_identidad,usuario,clave,rol  FROM Usuario";
            PreparedStatement pstmt = conexion.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                String nombre = rs.getString("nombre");
                String apellido = rs.getString("apellido");
                String correo = rs.getString("correo");
                String fechaNacimiento = rs.getString("fecha_nacimiento");
                String numeroIdentidad = rs.getString("numero_identidad");
                String usuario = rs.getString("usuario");
                String clave = rs.getString("clave");
                 String rol = rs.getString("rol");

                Object[] rowData = {nombre, apellido, correo, fechaNacimiento, numeroIdentidad, usuario, clave,rol};
                model.addRow(rowData);
            }

            rs.close();
            pstmt.close();
            conexion.close();

        } catch (SQLException ex) {
            System.out.println("Error al obtener los datos de la base de datos: " + ex.toString());
        }
    }
}
    private void cargarTabla() {
    DefaultTableModel model = (DefaultTableModel) tabladetalles.getModel();
    model.setRowCount(0); // Limpia la tabla antes de cargar nuevos datos

    conexionsql conexionBD = new conexionsql();
    Connection conexion = conexionBD.obtenerconexion();

    if (conexion != null) {
        try {
            // Query para obtener los datos de la base de datos
            String sql = "SELECT nombre, apellido, correo, fecha_nacimiento, numero_identidad, usuario, clave, rol FROM Usuario";
            Statement stmt = conexion.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next()) {
                // Lee los datos de cada fila y agr√©galo al modelo de la tabla
                String nombre = rs.getString("nombre");
                String apellido = rs.getString("apellido");
                String correo = rs.getString("correo");
                String fecha = rs.getString("fecha_nacimiento");
                String identidad = rs.getString("numero_identidad");
                String usuario = rs.getString("usuario");
                String clave = rs.getString("clave");
                String rol = rs.getString("rol");

                // Agrega los datos de la fila al modelo de la tabla
                model.addRow(new Object[]{nombre, apellido, correo, fecha, identidad, usuario, clave, rol});
            }

            // Cierra los recursos
            rs.close();
            stmt.close();
            conexion.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar la tabla: " + ex.toString());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Error al conectar a la base de datos.");
    }
}
    private void limpiarCampos() {
    // Limpia los campos del formulario
    txtnombre.setText("");
    txtapellido.setText("");
    txtcorreo.setText("");
    cfecha.setDate(null); // Limpia el JDateChooser
    txtidentidad.setText("");
    txtusuario.setText("");
    txtclave.setText("");
    cbroles.setSelectedIndex(0); // Establece el primer √≠tem seleccionado en el JComboBox (si es aplicable)
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btnaliminar;
    private javax.swing.JButton btnmenu;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JComboBox<String> cbroles;
    private com.toedter.calendar.JDateChooser cfecha;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabladetalles;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtclave;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JTextField txtidentidad;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables
}
