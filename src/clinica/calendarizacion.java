/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinica;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

//Botón Verificar
import javax.swing.table.TableRowSorter;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import static java.lang.Integer.getInteger;
import javax.swing.RowFilter;




/**
 *
 * @author crist
 */
public class calendarizacion extends javax.swing.JFrame {

    conexionsql cone = new conexionsql();
    classcitas ci = new classcitas();
    mantenimiento man = new mantenimiento();
    int fila=0;
    int codigo=0;
    String identidad = "";
    int identidad1=0;
    
    
    public calendarizacion() {
        initComponents();
        this.setLocationRelativeTo(null);
        llenarpaciente();
        llenarPac2();
          cmbAsiento.addItem("1");
          cmbAsiento.addItem("2");
         //ci.cargartabla(Detalles, 0,0,"1","1",0,"1","1","1","1","mostrar");
         cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnmenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Detalles = new javax.swing.JTable();
        cmbAsiento = new javax.swing.JComboBox<>();
        txtObservaciones = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        txtPr_cita = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTx = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        cmbPacientes = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtHora = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        btnmenu.setText("menu");
        btnmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmenuActionPerformed(evt);
            }
        });

        Detalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id_cita", "Espacio_disponible", "Fecha_cita", "Hora_agenda", "Cod_paciente", "Observaciones_cita", "Descripcion_Cita_seguimiento", "Proxima_cita", "Tx"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Detalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DetallesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Detalles);
        Detalles.getAccessibleContext().setAccessibleDescription("");

        cmbAsiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Asiento Disponible");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Observaciones de la Cita");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Próxima Cita");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Eventos");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/formulario calendarizacion.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel7.setText("Citas");

        btnAgregar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton-agregar.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Hora de la Cita ");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Descripción de la Cita");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Fecha de la Cita");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Tx");

        DateChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DateChooserKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Paciente:");

        try {
            txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPr_cita, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(txtTx)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102))))
                            .addComponent(txtDescripcion)
                            .addComponent(txtObservaciones, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel14)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cmbPacientes, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 62, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(75, 75, 75))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(330, 330, 330))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnmenu)
                        .addGap(247, 247, 247))))
            .addGroup(layout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAsiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPr_cita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmenuActionPerformed
       
            menu nuevoFormulario = new menu();
        nuevoFormulario.setVisible(true);
        
        this.dispose();
        
        
        
    }//GEN-LAST:event_btnmenuActionPerformed

    private void DetallesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetallesMouseClicked
         try {
            fila = Detalles.getSelectedRow();
            identidad = Detalles.getValueAt(fila, 0).toString();
            //codigo = Integer.parseInt(Detalles.getValueAt(fila, 0).toString());
            
            ResultSet rs;
            Connection con = cone.obtenerconexion();
            CallableStatement cmd = con.prepareCall("{CALL sp_MostrarCitasEspecificas(?)}");
            //cmd.setInt(1, codigo);
            cmd.setString(1, identidad);
            rs = cmd.executeQuery();

            while (rs.next()) {
                
                codigo = rs.getInt("Id_cita");
                cmbAsiento.setSelectedItem(rs.getString("Espacio_disponible"));
                
                txtHora.setText(rs.getString("Hora_agenda"));
                
                cmbPacientes.setSelectedItem(rs.getString("Cod_paciente"));
                txtObservaciones.setText(rs.getString("Observaciones_cita"));
                txtDescripcion.setText(rs.getString("Descripcion_Cita_seguimiento"));
                
                txtTx.setText(rs.getString("Tx"));
                String fecha2 = rs.getString("Fecha_cita");
                
               
                
                DateChooser.setDate((Date.valueOf(fecha2)));
                String fecha3 = rs.getString("Proxima_cita");
                
                txtPr_cita.setDate((Date.valueOf(fecha3)));
                
            }

        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_DetallesMouseClicked

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (camposLlenos()){ 
        if (Validar_CampoHora(txtHora.getText())==true){
            JOptionPane.showMessageDialog(null, "Hora Incorrecta");
        }
        else{
            JOptionPane.showMessageDialog(null, "Hora Correcta");
        }
        
        if (txtHora.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese la hora","Error",JOptionPane.WARNING_MESSAGE);
        } else if (txtObservaciones.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese la observación del paciente","Error",JOptionPane.WARNING_MESSAGE);
        } else if (txtDescripcion.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese la descripción del paciente","Error",JOptionPane.WARNING_MESSAGE);    
        } else if (txtTx.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese el TX","Error",JOptionPane.WARNING_MESSAGE);    
        }    
        
        
        String fecha2 =((JTextField)DateChooser.getDateEditor().getUiComponent()).getText();
        String fecha3 =((JTextField)txtPr_cita.getDateEditor().getUiComponent()).getText();
        
        //ci.mantenimientocita(0, cmbAsiento.getSelectedIndex(),fecha2,txtHora.getText(),0,txtObservaciones.getText(),txtDescripcion.getText(),fecha3,txtTx.getText(), "agregar");
  
        int codigoPaciente = cmbPacientes.getSelectedIndex(); // Obtener el código seleccionado del combo box
        ci.mantenimientocita(0, cmbAsiento.getSelectedIndex(), fecha2, txtHora.getText(), codigoPaciente, txtObservaciones.getText(), txtDescripcion.getText(), fecha3, txtTx.getText(), "agregar");
        
        
       JOptionPane.showMessageDialog(null, "Registro Exitoso");
       //ci.cargartabla(Detalles, 0,0,"1","1",0,"1","1","1","1","mostrar");
       cargarTabla();
       limpiar();
       }
       else{
       JOptionPane.showMessageDialog(null, "Por favor llene todos los campos de citas.");
       }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void DateChooserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateChooserKeyTyped
        char h = evt.getKeyChar();
        if(h<'0'||h>'9') evt.consume();
    }//GEN-LAST:event_DateChooserKeyTyped

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String fecha2 =((JTextField)DateChooser.getDateEditor().getUiComponent()).getText();
        String fecha3 =((JTextField)txtPr_cita.getDateEditor().getUiComponent()).getText();
        ci.mantenimientocita(codigo,0, "1","1",0,"1","1","1","1","eliminar");
        JOptionPane.showMessageDialog(null, "Eliminación Exitosa");
        //ci.cargartabla(Detalles,0,0,"1","1",0,"1","1","1","1","mostrar");
        cargarTabla();
        limpiar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    public Boolean Validar_CampoHora(String Hora){
        boolean b;
        char [] a = Hora.toString().toCharArray();
        String [] c = Hora.split(":");
        if ((a[0]== ' ') || (a [1]== ' ') || (a [2]== ' ')
           || (a[3]== ' ') || (a [4]== ' ')
           || (getInteger(c[0])>24) || (getInteger(c[1])>59)){
            b = false;
        } else{
            b = false;
        }
        return b;
    }
    
    public int getInteger(String valor){
        int integer = Integer.parseInt(valor);
        return integer;
    }
    
    
    public void llenarpaciente(){
        cmbAsiento.setModel(ci.llenarpac());
        }
    
    public void llenarPac2(){
        cmbPacientes.setModel(ci.llenarpacienteproc());
        }
    private boolean camposLlenos() {
    if (cmbAsiento.getSelectedIndex() == -1 || DateChooser.getDate() == null || txtHora.getText().isEmpty() ||
        cmbPacientes.getSelectedIndex() == -1 || txtObservaciones.getText().isEmpty() ||
        txtDescripcion.getText().isEmpty()|| txtPr_cita.getDate() == null ||txtTx.getText().isEmpty()) {
        return false;
    }
    return true;
}
    
    public void limpiar()
        {
        //txtFecha.setText("");
        txtHora.setText("");
        txtObservaciones.setText("");
        txtDescripcion.setText("");
        //txtPr_cita.setText("");
        txtTx.setText("");
        DateChooser.setDate(null);
        txtPr_cita.setDate(null);
        cmbAsiento.setSelectedIndex(0);
        cmbPacientes.setSelectedIndex(0);
        }
    
    
    
    //----------------------------------------
    
    
    
    
    private void cargarTabla(){
        
        DefaultTableModel modelotabla = (DefaultTableModel) Detalles.getModel();
        modelotabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
                
        try {
            Connection con = cone.obtenerconexion();
            ps = con.prepareStatement("SELECT c.Id_cita, c.Espacio_disponible, c.Fecha_cita, c.Hora_agenda, (p.Nombre+p.Apellido), c.Observaciones_cita, c.Descripcion_Cita_seguimiento, c.Proxima_cita, c.Tx\n" +
            "FROM [Citas]c join [Paciente]p\n" +
            "on \n" +
            "c.Cod_paciente=p.Cod_paciente");
            rs = ps.executeQuery();
            //Extrae las columnas que hay en la BDD y las manda a la variable columna para iterar respecto a ese tamano
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int i = 0; i < columnas; i++) {
                    //Extrae la informacion de la base de datos
                    fila[i] = rs.getObject(i + 1);
                }
                modelotabla.addRow(fila);
            }
            
            
            
        } catch (SQLException e) {
            
            JOptionPane.showMessageDialog(null, e);
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calendarizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calendarizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calendarizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calendarizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calendarizacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JTable Detalles;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnmenu;
    private javax.swing.JComboBox<String> cmbAsiento;
    private javax.swing.JComboBox<String> cmbPacientes;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JTextField txtObservaciones;
    private com.toedter.calendar.JDateChooser txtPr_cita;
    private javax.swing.JTextField txtTx;
    // End of variables declaration//GEN-END:variables
}
