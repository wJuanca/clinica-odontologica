/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinica;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.event.*;
import java.io.File;
/**
 *
 * @author Juanca
 */
public class odontopediatria extends javax.swing.JFrame {
    mantenimiento man = new mantenimiento();
    Document documento;
    FileOutputStream archivo;
    Paragraph titulo;  

    /**
     * Creates new form odontopediatria
     */
    public odontopediatria() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        for (int i = 1; i < 96; i++) 
        {
            cbedad.addItem(String.valueOf(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtlugar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcli = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtdirec = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbedad = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtdni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpaciente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtpacidni = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtdr = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtmp = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnmenu = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Lugar y fecha");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nombre completo del Cliente");

        txtcli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcliKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Direccion");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Edad");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("DNI");

        txtdni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdniKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nombre completo del Paciente");

        txtpaciente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpacienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("DNI del Paciente");

        txtpacidni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpacidniKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Nombre completo del Dr. / Dra.");

        txtdr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdrKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("MP");

        txtmp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmpKeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/archivo-pdf.png"))); // NOI18N
        jButton1.setText("Generar PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnmenu.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnmenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar-sesion.png"))); // NOI18N
        btnmenu.setText("menu");
        btnmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmenuActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/odontologia.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel10.setText("Odontopediatria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdirec, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbedad, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtlugar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtcli, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtdr, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtmp))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtpaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtpacidni, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnmenu, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtlugar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtcli, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtdirec, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(txtdni, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbedad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtpaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtpacidni, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtmp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtdr, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try
        {
            documento = new Document();
            //documento.setMargins(50, 50, 30, 30);

            String downloads = System.getProperty("user.home") + "/Downloads/";
            String fileName = "Consentimiento Informado Odontopediatria "+txtcli.getText() + ".pdf";
            String filePath = downloads + fileName;
            archivo = new FileOutputStream(filePath);
            PdfWriter.getInstance(documento, archivo);

            documento.open();

            /*
            // Crear la tabla con una celda
            PdfPTable table = new PdfPTable(1);
            table.setWidthPercentage(100); // Establecer el ancho de la tabla al 100% del ancho disponible

            // Crear el párrafo "Lugar y fecha"
            String lugarYFecha = "Lugar y fecha " + txtlugar.getText();
            Paragraph paragraph = new Paragraph(lugarYFecha, new Font(Font.FontFamily.HELVETICA, 10));

            // Crear la celda y agregar el párrafo
            PdfPCell cell = new PdfPCell(paragraph);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);

            // Agregar la celda a la tabla
            table.addCell(cell);

            // Agregar la tabla al documento
            documento.add(table);
            */

            String lugarYFecha = "Lugar y fecha: " + txtlugar.getText();

            Paragraph paragraph = new Paragraph("\n"+"\n"+"\n"+"\n"+lugarYFecha, new Font(Font.FontFamily.HELVETICA, 10));
            paragraph.setAlignment(Element.ALIGN_RIGHT);
            documento.add(paragraph);

            documento.add(Chunk.NEWLINE);
            /*
            Phrase phrase1 = new Phrase();
            Chunk chunk2 = new Chunk("Especificación de tratamiento alternativo (riesgos, beneficios y perjuicios): ", new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD));
            Chunk chunk3 = new Chunk(txteta.getText(), new Font(Font.FontFamily.HELVETICA, 10));
            phrase1.add(chunk2);
            phrase1.add(chunk3);
            documento.add(new Paragraph(phrase1));
            */
            Font letra1 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD | Font.UNDERLINE);
            String titulo = "CONSENTIMIENTE INFOMRADO ODONTOPEDIATRIA";

            Paragraph contenido1 = new Paragraph(titulo, letra1);
            contenido1.setAlignment(Element.ALIGN_CENTER);
            documento.add(contenido1);

            documento.add(Chunk.NEWLINE);

            Font letra2 = new Font(Font.FontFamily.HELVETICA, 10);
            String parrafo1 = "    Por la presente hace saber a Usted que tiene derecho a conocer el procedimiento al que va a ser sometido el"
            + " menor de edad y las complicaciones más frecuentes que ocurren. Este documento explica todas estas cuestiones, Léalo"
            + " atentamente y consulte todas las dudad que se le planteen. Le recomendamos que, por imperativo legal, tendrá que firmar,"
            + " el representante legal, el consentimiento informado para que pueda realizarse dicho procedimiento. A propósito, declaro"
            + " haber sido informado y haber comprendido acabadamente el objetivo del tratamiento a realizar.\n";

            Paragraph contenido2 = new Paragraph(parrafo1, letra2);
            contenido2.setAlignment(Element.ALIGN_JUSTIFIED);
            documento.add(contenido2);

            Phrase phrase1 = new Phrase();
            Chunk chunk1 = new Chunk("Yo, "+txtcli.getText()+" de "+cbedad.getSelectedItem()+" edad, DNI "+txtdni.getText()+" con dirección en"
                + " "+txtdirec.getText()+" , como representante legal de "+txtpaciente.getText()+""
                + " con DNI: "+txtpacidni.getText()+" he sido informado/a por el Dr. / Dra." , new Font(Font.FontFamily.HELVETICA, 10));
            Chunk chunk2 = new Chunk(" "+txtdr.getText()+"", new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD));
            Chunk chunk3 = new Chunk(" de los procedimientos propios clínicos en odontopediatría, que constan en el plan de tratamiento otorgando mi"
                + " consentimiento para realizar las prácticas necesarias al caso clínico.\n", new Font(Font.FontFamily.HELVETICA, 10));
            phrase1.add(chunk1);
            phrase1.add(chunk2);
            phrase1.add(chunk3);
            documento.add(new Paragraph(phrase1));

            Font letra3 = new Font(Font.FontFamily.HELVETICA, 10);
            String parrafo2 = "Estoy de acuerdo que el niño sea sometido a anestesia local en caso de que fuera necesario, sabiendo los riesgos"
            + " que ello implica, delegando al odontólogo la elección del tipo de anestesia.\n"
            + " Se me ha explicado el diagnóstico, la naturaleza de la enfermedad que padece mi representado y su evolución"
            + " natural, objetivos del tratamiento propuesto, así como las alternativas del tratamiento que pueden ser practicadas,"
            + " descripción de las consecuencias derivadas del tratamiento o intervención, beneficios y complicaciones comunes"
            + " que se pueden desencadenar durante o después del mismo, riesgos personales y entendiendo que ante alguna"
            + " manifestación de complicaciones deberé acudir nuevamente al profesional tratante de mi representado.\n"
            + " Riesgos y complicaciones esperados:";

            Paragraph contenido3 = new Paragraph(parrafo2, letra3);
            contenido3.setAlignment(Element.ALIGN_JUSTIFIED);
            documento.add(contenido3);

            documento.add(Chunk.NEWLINE);

            Font letra4 = new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD);
            String riesgos = "Dolor, Inflamación, Infección, Fractura del elemento dentario por deterioro\n"
            + "Pulpitis (inflamación del nervio): determina que se le realice al paciente un tratamiento pulpar\n"
            + "Hematomas y hemorragias (sangrado - moretones)";
            Paragraph contenido4 = new Paragraph(riesgos, letra4);
            contenido4.setAlignment(Element.ALIGN_CENTER);
            documento.add(contenido4);

            documento.add(Chunk.NEWLINE);

            Font letra5 = new Font(Font.FontFamily.HELVETICA, 10);
            String parrafo3 = "Comprendo que la odontopediatría, es el área de la odontología que se encarga de restablecer la salud bucal integral"
            + " de niños y adolescentes. Comprendo que la odontología no es una ciencia exacta y por lo que los resultados están "
            + " sujetos a múltiples factores.\n"
            + "He tenido información clara y suficiente, la oportunidad de preguntar y he obtenido respuestas satisfactorias, me"
            + " siento libre para decidir de acuerdo a mis valores e intereses y me declaro competente para tomar la decisión que"
            + " corresponda.\n";
            Paragraph contenido5 = new Paragraph(parrafo3, letra5);
            contenido5.setAlignment(Element.ALIGN_JUSTIFIED);
            documento.add(contenido5);

            Phrase phrase2 = new Phrase();
            Chunk chunk4 = new Chunk("Así mismo, doy fe que mi representado fue oído y/o dio su asentimiento a realizar el tratamiento.\n" , new Font(Font.FontFamily.HELVETICA, 10));
            Chunk chunk5 = new Chunk(" Por lo antes expuesto doy el consentimiento al Dr. / Dra: ", new Font(Font.FontFamily.HELVETICA, 10));
            Chunk chunk6 = new Chunk(""+txtdr.getText()+"\n", new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD));
            Chunk chunk7 = new Chunk("MP: ",new Font(Font.FontFamily.HELVETICA, 10));
            Chunk chunk8 = new Chunk(""+txtmp.getText()+"", new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD));
            Chunk chunk9 = new Chunk(" a realizar el tratamiento al menor de edad o discapacitado:", new Font(Font.FontFamily.HELVETICA, 10));

            phrase2.add(chunk4);
            phrase2.add(chunk5);
            phrase2.add(chunk6);
            phrase2.add(chunk7);
            phrase2.add(chunk8);
            phrase2.add(chunk9);
            documento.add(new Paragraph(phrase2));

            Font letra6 = new Font(Font.FontFamily.HELVETICA, 10);
            String parrafo4 = ""+txtpaciente.getText()+"\n"
            + "\n"
            + "\n"
            + "               Firma del representante legal                              Aclaración                                             DNI\n"
            + "\n"
            + "          _____________________________                                                                            "+txtdni.getText()+""
            + "\n"
            + "\n"
            + "                                                                           Firma y sello del Profesional                            \n "
            + "\n"
            + "                                                                _________________________________                                     "
            + "";
            Paragraph contenido6 = new Paragraph(parrafo4, letra6);
            contenido6.setAlignment(Element.ALIGN_JUSTIFIED);
            documento.add(contenido6);

            documento.close();

            File file = new File(filePath);
            Desktop.getDesktop().open(file);

        }
        catch (FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        catch (DocumentException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmenuActionPerformed

        menu nuevoFormulario = new menu();
        nuevoFormulario.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnmenuActionPerformed

    private void txtcliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcliKeyTyped
        // TODO add your handling code here:
        man.sololetras(txtcli, evt);
    }//GEN-LAST:event_txtcliKeyTyped

    private void txtdniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdniKeyTyped
        // TODO add your handling code here:
        man.solonumeros(txtdni, evt);
    }//GEN-LAST:event_txtdniKeyTyped

    private void txtpacienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpacienteKeyTyped
        // TODO add your handling code here:
        man.sololetras(txtpaciente, evt);
    }//GEN-LAST:event_txtpacienteKeyTyped

    private void txtpacidniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpacidniKeyTyped
        // TODO add your handling code here:
        man.solonumeros(txtpacidni, evt);
    }//GEN-LAST:event_txtpacidniKeyTyped

    private void txtdrKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdrKeyTyped
        // TODO add your handling code here:
        man.sololetras(txtdr, evt);
    }//GEN-LAST:event_txtdrKeyTyped

    private void txtmpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmpKeyTyped
        // TODO add your handling code here:
        man.solonumeros(txtmp, evt);
    }//GEN-LAST:event_txtmpKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(odontopediatria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(odontopediatria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(odontopediatria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(odontopediatria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new odontopediatria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmenu;
    private javax.swing.JComboBox<String> cbedad;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtcli;
    private javax.swing.JTextField txtdirec;
    private javax.swing.JTextField txtdni;
    private javax.swing.JTextField txtdr;
    private javax.swing.JTextField txtlugar;
    private javax.swing.JTextField txtmp;
    private javax.swing.JTextField txtpacidni;
    private javax.swing.JTextField txtpaciente;
    // End of variables declaration//GEN-END:variables
}
